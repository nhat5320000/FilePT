import cv2
from ultralytics import YOLO

# Load YOLO model
eye_detect = YOLO("training/eyes-detect/yolov11n/best.engine", task='detect')

# Ki·ªÉm tra xem model c√≥ th√¥ng tin k√≠ch th∆∞·ªõc ƒë·∫ßu v√†o kh√¥ng
print("üõ† Model details:", eye_detect)

# ƒê·ªãnh nghƒ©a nh√£n
LABELS = ["OK", "NG", "NG1", "NG2", "NG3NG3"]

# M·ªü camera
cap = cv2.VideoCapture(0)
if not cap or not cap.isOpened():
    print("‚ùå Kh√¥ng th·ªÉ m·ªü camera!")
    exit()

try:
    while True:
        success, frame = cap.read()
        if not success:
            print("‚ùå Kh√¥ng th·ªÉ ƒë·ªçc frame!")
            break

        # L·∫•y k√≠ch th∆∞·ªõc input ph√π h·ª£p n·∫øu model h·ªó tr·ª£
        try:
            input_size = eye_detect.overrides.get('imgsz', (640, 640))  # M·∫∑c ƒë·ªãnh d√πng 640x640 n·∫øu kh√¥ng c√≥ th√¥ng tin
        except AttributeError:
            input_size = (640, 320)  # N·∫øu l·ªói, d√πng 640x320

        # Resize ·∫£nh theo model y√™u c·∫ßu
        frame_resized = cv2.resize(frame, input_size)

        # Ch·∫°y model YOLO v·ªõi k√≠ch th∆∞·ªõc ·∫£nh ph√π h·ª£p
        results = eye_detect(frame_resized, conf=0.7, imgsz=input_size)[0]

        # Duy·ªát qua t·ª´ng detection
        for box in results.boxes:
            class_id = int(box.cls)
            if 0 <= class_id < len(LABELS):
                print(f"üîπ Ph√°t hi·ªán: {LABELS[class_id]}")

except KeyboardInterrupt:
    print("\nüõë Nh·∫≠n t√≠n hi·ªáu Ctrl+C, tho√°t ch∆∞∆°ng tr√¨nh...")

finally:
    cap.release()
    print("üì¢ ƒê√£ gi·∫£i ph√≥ng camera.")
